#!/usr/bin/env bash

source "colors"

# program meta
VERSION="0.1"
PROGRAM=`basename $0`
AUTHORS=("Torkild Dyvik Olsen")

# usage information and versioning
usage() {
	echo "usage: $PROGRAM [OPTIONS] [TARGET]"
	echo "List Git information about TARGET and it's child directories."
	echo
	echo " -o, --only-git     list only git repositories"
	echo " --help             displays this help message and exits"
	echo " --version          output version information and exits"
	exit 1
}

version() {
	echo "$PROGRAM (gitutil) $VERSION"
	echo "Written by $(IFS=' ';echo "${AUTHORS[*]}";IFS=$' \t\n')"
	echo
	echo "Copyright (C) 2015 Public domain"
	exit 1
}

# default options
ONLY_GIT=false
DIR_NAME_LENGHT=0

# parse options
TEMP=$(getopt -o o --long only-git,help,version -n $PROGRAM -- "$@")
eval set -- "$TEMP"

# set options to variables
while [[ "$#" -ne 0 ]]; do
	case "$1" in
		--version) 		version; shift; break;;
		--help) 		usage; shift; break;;
		-o|--only-git)	ONLY_GIT=true; shift;;
		--)				shift; break;;
		*) 				break;;
	esac
done

check_dir() {
	dir="$1"
	if cd $dir 2> /dev/null; then
		if [ ${#dir} -gt $DIR_NAME_LENGHT ]; then
			DIR_NAME_LENGHT=${#dir}
		fi

		if ! git status 2>&1 | grep "^fatal: Not a git repository" > /dev/null; then
			#branch=`git branch | grep '^*'`
			branch=`git status -sb | head -1`
			printf "${Bold}${Green}[✓] %s${Rst} @ %s\n" $dir "$branch"
		elif ! $ONLY_GIT; then
			echo -e "${Red}[✗] $1${Rst}"
		fi

		cd ..
	fi
}

iterate_dir() {
	cd "$1"
	for dir in `ls -A`; do
		check_dir $dir
	done
}

if [ $# -eq 0 ]; then
	iterate_dir "$PWD"
fi

while [[ $# -gt 0 ]]; do
	check_dir $1; shift
done

#TODO: Maybe separate into two scripts; is_dir_git and list_git_repos_in_dir
