#!/usr/bin/env bash

VERSION="0.1"
PROGRAM=`basename $0`
AUTHORS=("Torkild Dyvik Olsen")

# usage information and versioning
usage() {
	echo "usage: $PROGRAM [--no-git] TARGET"
	echo "List Git information about TARGET and it's child directories."
	echo
	echo " --no-git	 display non-git repositories in the list"
	echo " --help    displays this help and exits"
	echo " --version output version information and exits"
	exit 1
}

version() {
	echo "$PROGRAM (gitutil) $VERSION"
	echo "Written by $(IFS=' ';echo "${AUTHORS[*]}";IFS=$' \t\n')"
	echo
	echo "Copyright (C) 2015 Public domain"
	exit 1
}

# parse options
TEMP=$(getopt -o --long no-git,help,version -n '$PROGRAM' -- "$@")
eval set -- "$TEMP"
shift 3

# set options to variables
while true; do
	case "$1" in
		--version) 			version; shift; break;;
		--help) 			usage; shift; break;;
		--no-git|--non-git) NO_GIT=true; shift; break;; # TODO: Actually add support for no git
		--) 				shift; break;;
		*) 					break;;
	esac
done

check_dir() {
	cd "$1";
	if ! git status 2>&1 | grep "^fatal: Not a git repository" > /dev/null; then
		printf "%s is a Git repository.\n" $1
	else
		printf "%s is not.\n" $1
	fi
	#	if ! git status 2> /dev/null | grep "nothing to commit" 1> /dev/null; then
	#		if git status -s 2> /dev/null 1> /dev/null; then
	#			echo;
	#			echo $dir;
	#			git status -sb;
	#		fi
	#	fi
}

iterate_dir() {
	cd "$1"
	for dir in `ls`; do
		check_dir $dir
	done
}

if [ $# -eq 0 ]; then
	iterate_dir "$PWD"
elif [ $# -gt 1 ]; then
	tar="/var/null" #TODO: Make the program accept mulgiple directories to check
else
	check_dir "$1"
fi;
